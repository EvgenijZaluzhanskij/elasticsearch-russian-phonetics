apply plugin: 'application'

//noinspection GroovyAssignabilityCheck
run {
    mainClassName = "com.github.papahigh.phonetic.benchmarks.throughput.Runner"
    if (project.hasProperty('type')) {
        switch (type) {
            case 'distribution':
                mainClassName = "com.github.papahigh.phonetic.benchmarks.distribution.Runner"
                break
            case 'misspellings_and_typos':
                mainClassName = "com.github.papahigh.phonetic.benchmarks.fuzziness.Runner"
                break
            case 'throughput':
                mainClassName = "com.github.papahigh.phonetic.benchmarks.throughput.Runner"
                break
            case 'gc':
                mainClassName = "com.github.papahigh.phonetic.benchmarks.gc.Runner"
                break
            case 'generate_dictionaries':
                mainClassName = "com.github.papahigh.phonetic.support.DictionaryGenerator"
                break
            default:
                ant.fail("unknown benchmark type: $type")
        }
    }
}

dependencies {
    compile project(":encoder")
    compile "org.apache.lucene:lucene-analyzers-common:${versions.lucene}"
    compile 'org.jooq:jool:0.9.13'
    compile 'com.squareup:javapoet:1.11.1'
    compile 'org.apache.commons:commons-text:1.4'
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.apache.commons:commons-collections4:4.2'
    compile 'org.openjdk.jmh:jmh-core:1.21'
    compile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}
